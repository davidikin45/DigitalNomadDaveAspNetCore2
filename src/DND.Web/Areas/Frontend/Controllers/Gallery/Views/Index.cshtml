@model WebApiPagedResponseDto<DirectoryInfo>
@inject IHostingEnvironment hostingEnvironment
@inject AppSettings  appSettings

@{
    ViewBag.PageTitle = "Gallery";
    ViewBag.Description = "Photo & Video Gallery";
    ViewBag.Blog = true;
}

<form asp-controller="@Html.Controller()" asp-action="@Html.Action()" asp-antiforgery="false" method="get" class="form-inline">
    <div class="input-group input-group-full-width mb-2">
        @Html.TextBox("search", ViewBag.Search as string, new { placeholder = "Search", @class = "form-control" })
        <span class="input-group-btn">
            <input type="submit" value="Search" class="btn btn-primary" />
        </span>
    </div>
</form>

<div id="galleries" class="card-columns card-columns-sm-1 card-columns-md-2 card-columns-lg-2 card-columns-xl-2">

    @if ((string.IsNullOrEmpty(Model.Search) || "instagram".Contains(Model.Search.ToLower())) && Model.Page == 1)
    {
        <div class="card card-inverse" id="instagram-album" style="display:inline-block">
            <a class="card-img-top" title="Instagram" href="@(Url.Action("Gallery", new { name = "instagram" }))">
                <div class="card-img-overlay card-img-overlay-hover d-flex">
                    <div class="my-auto mx-auto text-center">
                        <h4 class="card-title">Instagram</h4>
                    </div>
                </div>
            </a>
        </div>
    }

    @foreach (var album in Model.Data)
    {
        <div class="card card-inverse" style="display:inline-block">

            @{
                var mainPhotoVideoText = album.MainPhotoOrVideo();
                if (mainPhotoVideoText == null)
                {
                    mainPhotoVideoText = album.MainPhotoOrVideoOrText();
                }
            }
            <img class="card-img-top" alt="@album.Name.PascalCase().GetStringWithSpacesAndFirstLetterUpper()" src="@mainPhotoVideoText.VirtualPathSlugOrUrl(hostingEnvironment, 640, 640)" />
            <a class="card-img-top" title="@album.Name.PascalCase().GetStringWithSpacesAndFirstLetterUpper()" href="@(Url.Action("Gallery", new { name = album.Name.ToSlug() }))">
                <div class="card-img-overlay card-img-overlay-hover d-flex">
                    <div class="my-auto mx-auto text-center">
                        <h4 class="card-title">@album.Name.PascalCase().GetStringWithSpacesAndFirstLetterUpper()</h4>
                    </div>
                </div>
            </a>
        </div>

    }
</div>

@{Func<int, string> link = pageIndex => Url.Action("Index", new { page = pageIndex, pageSize = Model.PageSize, orderColumn = Model.OrderColumn, orderType = Model.OrderType, search = Model.Search });}
@HtmlHelperExtensions.BootstrapPager(Html, Model.Page, link, Model.TotalItems, Model.PageSize, 5)

@if ((string.IsNullOrEmpty(Model.Search) || "instagram".Contains(Model.Search.ToLower())) && Model.Page == 1)
{
    @section scripts {
        <script type="text/javascript">
            var userFeed = new Instafeed({
                get: 'user',
                userId: '@appSettings.InstagramUserId',
                accessToken: '@appSettings.InstagramAccessToken',
                template: '<img alt="Instagram" class="card-img-top" src="{{image}}" />',
                resolution: 'standard_resolution',
                limit: 1,
                target: 'instagram-album'
            });
            userFeed.run();
            //https://api.instagram.com/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=token
            //model.images.standard_resolution.url
        </script>
    }
}
